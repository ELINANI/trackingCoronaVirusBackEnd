// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using trackingCoronaVirusBackEnd2.models;

namespace trackingCoronaVirusBackEnd2.Migrations
{
    [DbContext(typeof(appliactionDbContext))]
    [Migration("20200507042317_creatsss")]
    partial class creatsss
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("trackingCoronaVirusBackEnd2.models.Client", b =>
                {
                    b.Property<string>("codeClient")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("age")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("codeNiveau")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("codeQuartier")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("nomClient")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("phoneClient")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("prenomClient")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("sexeClient")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("codeClient");

                    b.HasIndex("codeNiveau");

                    b.HasIndex("codeQuartier");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("trackingCoronaVirusBackEnd2.models.Contamination", b =>
                {
                    b.Property<string>("codeContamination")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("codeClient")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("codeHopitale")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("codeNiveau")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("dateContamination")
                        .HasColumnType("varchar(150)");

                    b.HasKey("codeContamination");

                    b.HasIndex("codeClient");

                    b.HasIndex("codeHopitale");

                    b.HasIndex("codeNiveau");

                    b.ToTable("contaminations");
                });

            modelBuilder.Entity("trackingCoronaVirusBackEnd2.models.Hopitale", b =>
                {
                    b.Property<string>("codeHopitale")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("codeQuartier")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("loginHopitale")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("nomHopitale")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("phoneHopitale")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("pwdHopitale")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.HasKey("codeHopitale");

                    b.HasIndex("codeQuartier");

                    b.ToTable("Hopitaux");
                });

            modelBuilder.Entity("trackingCoronaVirusBackEnd2.models.Niveau", b =>
                {
                    b.Property<string>("codeNiveau")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("typeNiveau")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("codeNiveau");

                    b.ToTable("Niveaux");
                });

            modelBuilder.Entity("trackingCoronaVirusBackEnd2.models.Quartier", b =>
                {
                    b.Property<string>("codeQuartier")
                        .HasColumnType("varchar(150)");

                    b.Property<double>("lat")
                        .HasColumnType("double");

                    b.Property<double>("lng")
                        .HasColumnType("double");

                    b.Property<string>("nomQuartier")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("codeQuartier");

                    b.ToTable("Quartiers");
                });

            modelBuilder.Entity("trackingCoronaVirusBackEnd2.models.Client", b =>
                {
                    b.HasOne("trackingCoronaVirusBackEnd2.models.Niveau", "Niveau")
                        .WithMany()
                        .HasForeignKey("codeNiveau");

                    b.HasOne("trackingCoronaVirusBackEnd2.models.Quartier", "Quartier")
                        .WithMany()
                        .HasForeignKey("codeQuartier");
                });

            modelBuilder.Entity("trackingCoronaVirusBackEnd2.models.Contamination", b =>
                {
                    b.HasOne("trackingCoronaVirusBackEnd2.models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("codeClient");

                    b.HasOne("trackingCoronaVirusBackEnd2.models.Hopitale", "Hopitale")
                        .WithMany()
                        .HasForeignKey("codeHopitale");

                    b.HasOne("trackingCoronaVirusBackEnd2.models.Niveau", "Niveau")
                        .WithMany()
                        .HasForeignKey("codeNiveau");
                });

            modelBuilder.Entity("trackingCoronaVirusBackEnd2.models.Hopitale", b =>
                {
                    b.HasOne("trackingCoronaVirusBackEnd2.models.Quartier", "Quartier")
                        .WithMany()
                        .HasForeignKey("codeQuartier");
                });
#pragma warning restore 612, 618
        }
    }
}
